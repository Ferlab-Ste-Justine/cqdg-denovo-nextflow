params {
    sampleFile = '/path/to/input/sampleFile'
    broad = '/path/to/broad/dir'
    referenceGenome = '/path/to/reference/dir'
    vepCache = '/path/to/vep/cache/dir'
    outputDir = '/path/to/outputDir/dir'
    referenceGenomeFasta = 'Homo_sapiens_assembly38.fasta'
    vepCpu = 2
    intervalsFile = 'name_interval_file.list'
    TSfilterSNP = '99.0'
    TSfilterINDEL = '99.0'
    hardFilters = [[name: 'QD2', expression: 'QD < 2.0'],
                   [name: 'QUAL30', expression: 'QUAL < 30.0'],
                   [name: 'SOR3', expression: 'SOR > 3.0'],
                   [name: 'FS60', expression: 'FS > 60.0'],
                   [name: 'MQ40', expression: 'MQ < 40.0'],
                   [name: 'MQRankSum-12.5', expression: 'MQRankSum < -12.5'],
                   [name: 'ReadPosRankSum-8', expression: 'ReadPosRankSum < -8.0']]
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outputDir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outputDir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outputDir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outputDir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}
